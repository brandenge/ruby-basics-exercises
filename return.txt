    *** 1 - Breakfast, Lunch, or Dinner? (Part 1) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  return 'Breakfast'
end

puts meal

Solution: Breakfast

    *** 2 - Breakfast, Lunch, or Dinner? (Part 2) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  'Evening'
end

puts meal

Solution: Evening

    *** 3 - Breakfast, Lunch, or Dinner? (Part 3) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  return 'Breakfast'
  'Dinner'
end

puts meal

Solution: Breakfast

    *** 4 - Breakfast, Lunch, or Dinner? (Part 4) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  puts 'Dinner'
  return 'Breakfast'
end

puts meal

Solution:

Dinner
Breakfast

    *** 5 - Breakfast, Lunch, or Dinner? (Part 5) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  'Dinner'
  puts 'Dinner'
end

p meal

Solution:

Dinner
nil

    *** 6 - Breakfast, Lunch, or Dinner? (Part 6) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def meal
  return 'Breakfast'
  'Dinner'
  puts 'Dinner'
end

puts meal

Solution: Breakfast

    *** 7 - Counting Sheep (Part 1) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def count_sheep
  5.times do |sheep|
    puts sheep
  end
end

puts count_sheep

Solution:

0
1
2
3
4
5

Note that the 5 at the end is outputted because of the last #puts that is outside of the method. The #times method returns self. self is the receiver of the method call, which in this case is the integer literal 5.

    *** 8 - Counting Sheep (Part 2) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def count_sheep
  5.times do |sheep|
    puts sheep
  end
  10
end

puts count_sheep

Solution:

0
1
2
3
4
10

    *** 9 - Counting Sheep (Part 3) ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def count_sheep
  5.times do |sheep|
    puts sheep
    if sheep >= 2
      return
    end
  end
end

p count_sheep

Solution:

0
1
2
nil

    *** 10 - Tricky Number ***

Problem: What will the following code print? Why? Don't run it until you've attempted to answer.

def tricky_number
  if true
    number = 1
  else
    2
  end
end

puts tricky_number

Solution: 1
